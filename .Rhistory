overallScore<-smallTown.df[,2]
overallRank<-rank(-smallTown.df[,2])
affordRank<-rank(smallTown.df[,3])
econRank<-rank(smallTown.df[,4])
eduAndHealthRank<-rank(smallTown.df[,5])
qualLifeRank<-rank(smallTown.df[,6])
distance<-smallTown.df[,"distance"]
smallTown.df<-cbind(city,overallRank,overallScore,
distance,affordRank,
econRank,eduAndHealthRank,
qualLifeRank)
str(smallTown.df)
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
library(rvest)
library(ggmap)
library(stringr)
library(dplyr)
library(ggplot2)
library(DT)
library(rcdimple)
setwd("~/Documents/GTD/Best Small Towns")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$xAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$yAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
plot(townTable)
save(townTable,file="PLOTS/tablePlot")
library(rvest)
library(ggmap)
library(stringr)
library(dplyr)
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#scrap data from web
smallTown.url<- read_html("https://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/")
smallTown.df<-smallTown.url %>%
html_nodes("table") %>%
.[[1]] %>%
html_table()
#clean initial data set
smallTown.df<-smallTown.df[,2:7]
state<-str_sub(smallTown.df[,1], -2, -1)
smallTown.df<-cbind(smallTown.df,state)
smallTown.df<-smallTown.df%>%
filter(state=="IL")
distCalc.fun<-function(address){
#function returns distance from Chicago for given address
rush.name <- "Chicago, IL"
miles<-suppressMessages(mapdist(address, rush.name, mode = 'driving')$miles)
return(round(miles,2))
}
distance<-distCalc.fun(smallTown.df[,1])
smallTown.df<-cbind(smallTown.df,distance)
#subset to towns within 60 driving miles of downtown Chicago
smallTown.df<-smallTown.df%>%
filter(distance<=60)
city<-str_sub(smallTown.df[,1], 0, -5)
overallScore<-smallTown.df[,2]
overallRank<-rank(-smallTown.df[,2])
affordRank<-rank(smallTown.df[,3])
econRank<-rank(smallTown.df[,4])
eduAndHealthRank<-rank(smallTown.df[,5])
qualLifeRank<-rank(smallTown.df[,6])
distance<-smallTown.df[,"distance"]
smallTown.df<-cbind.data.frame(city,overallRank,overallScore,
distance,affordRank,
econRank,eduAndHealthRank,
qualLifeRank)
# klusterGroup<-kmeans(smallTown.df[,3:4],4)
# set.seed(100)
# klusterGroup<-kmeans(apply(smallTown.df[,3:4], 2, scale),3)
# klusterGroup<-klusterGroup$cluster
#Kmeans clustering didnt work out so well, so I opted for simpler approach
newCluster<-paste(
ifelse(smallTown.df[,3]>=mean(smallTown.df[,3]),"Above Avg. Score,","Above Avg. Score,"),
ifelse(smallTown.df[,4]>=mean(smallTown.df[,4]),"Far","Near"))
smallTown.df<-cbind.data.frame(smallTown.df, newCluster)
rm(list=setdiff(ls(), "smallTown.df"))
save(smallTown.df,file="DATA/smallTown_finalData")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$xAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$yAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
plot(townTable)
save(townTable,file="PLOTS/tablePlot")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$xAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$yAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$xAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$yAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$yAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$xAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
library(rvest)
library(ggmap)
library(stringr)
library(dplyr)
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#scrap data from web
smallTown.url<- read_html("https://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/")
smallTown.df<-smallTown.url %>%
html_nodes("table") %>%
.[[1]] %>%
html_table()
#clean initial data set
smallTown.df<-smallTown.df[,2:7]
state<-str_sub(smallTown.df[,1], -2, -1)
smallTown.df<-cbind(smallTown.df,state)
smallTown.df<-smallTown.df%>%
filter(state=="IL")
distCalc.fun<-function(address){
#function returns distance from Chicago for given address
rush.name <- "Chicago, IL"
miles<-suppressMessages(mapdist(address, rush.name, mode = 'driving')$miles)
return(round(miles,2))
}
distance<-distCalc.fun(smallTown.df[,1])
smallTown.df<-cbind(smallTown.df,distance)
#subset to towns within 60 driving miles of downtown Chicago
smallTown.df<-smallTown.df%>%
filter(distance<=60)
city<-str_sub(smallTown.df[,1], 0, -5)
overallScore<-smallTown.df[,2]
overallRank<-rank(-smallTown.df[,2])
affordRank<-rank(smallTown.df[,3])
econRank<-rank(smallTown.df[,4])
eduAndHealthRank<-rank(smallTown.df[,5])
qualLifeRank<-rank(smallTown.df[,6])
distance<-smallTown.df[,"distance"]
smallTown.df<-cbind.data.frame(city,overallRank,overallScore,
distance,affordRank,
econRank,eduAndHealthRank,
qualLifeRank)
# klusterGroup<-kmeans(smallTown.df[,3:4],4)
# set.seed(100)
# klusterGroup<-kmeans(apply(smallTown.df[,3:4], 2, scale),3)
# klusterGroup<-klusterGroup$cluster
#Kmeans clustering didnt work out so well, so I opted for simpler approach
newCluster<-paste(
ifelse(smallTown.df[,3]>=mean(smallTown.df[,3]),"Above Avg. Score,","Below Avg. Score,"),
ifelse(smallTown.df[,4]>=mean(smallTown.df[,4]),"Far","Near"))
smallTown.df<-cbind.data.frame(smallTown.df, newCluster)
rm(list=setdiff(ls(), "smallTown.df"))
save(smallTown.df,file="DATA/smallTown_finalData")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$yAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$xAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
library(rvest)
library(ggmap)
library(stringr)
library(dplyr)
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
#scrap data from web
smallTown.url<- read_html("https://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/")
smallTown.df<-smallTown.url %>%
html_nodes("table") %>%
.[[1]] %>%
html_table()
#clean initial data set
smallTown.df<-smallTown.df[,2:7]
state<-str_sub(smallTown.df[,1], -2, -1)
smallTown.df<-cbind(smallTown.df,state)
smallTown.df<-smallTown.df%>%
filter(state=="IL")
distCalc.fun<-function(address){
#function returns distance from Chicago for given address
rush.name <- "Chicago, IL"
miles<-suppressMessages(mapdist(address, rush.name, mode = 'driving')$miles)
return(round(miles,2))
}
distance<-distCalc.fun(smallTown.df[,1])
smallTown.df<-cbind(smallTown.df,distance)
#subset to towns within 60 driving miles of downtown Chicago
smallTown.df<-smallTown.df%>%
filter(distance<=60)
city<-str_sub(smallTown.df[,1], 0, -5)
overallScore<-smallTown.df[,2]
overallRank<-rank(-smallTown.df[,2])
affordRank<-rank(smallTown.df[,3])
econRank<-rank(smallTown.df[,4])
eduAndHealthRank<-rank(smallTown.df[,5])
qualLifeRank<-rank(smallTown.df[,6])
distance<-smallTown.df[,"distance"]
smallTown.df<-cbind.data.frame(city,overallRank,overallScore,
distance,affordRank,
econRank,eduAndHealthRank,
qualLifeRank)
# klusterGroup<-kmeans(smallTown.df[,3:4],4)
# set.seed(100)
# klusterGroup<-kmeans(apply(smallTown.df[,3:4], 2, scale),3)
# klusterGroup<-klusterGroup$cluster
#Kmeans clustering didnt work out so well, so I opted for simpler approach
newCluster<-paste(
ifelse(smallTown.df[,3]>=mean(smallTown.df[,3]),"Above Avg. Score,","Below Avg. Score,"),
ifelse(smallTown.df[,4]>=mean(smallTown.df[,4]),"Far","Near"))
smallTown.df<-cbind.data.frame(smallTown.df, newCluster)
rm(list=setdiff(ls(), "smallTown.df"))
save(smallTown.df,file="DATA/smallTown_finalData")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$yAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$xAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$yAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$xAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
library(rvest)
library(ggmap)
library(stringr)
library(dplyr)
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
#scrap data from web
smallTown.url<- read_html("https://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/")
smallTown.df<-smallTown.url %>%
html_nodes("table") %>%
.[[1]] %>%
html_table()
#clean initial data set
smallTown.df<-smallTown.df[,2:7]
state<-str_sub(smallTown.df[,1], -2, -1)
smallTown.df<-cbind(smallTown.df,state)
smallTown.df<-smallTown.df%>%
filter(state=="IL")
distCalc.fun<-function(address){
#function returns distance from Chicago for given address
rush.name <- "Chicago, IL"
miles<-suppressMessages(mapdist(address, rush.name, mode = 'driving')$miles)
return(round(miles,2))
}
distance<-distCalc.fun(smallTown.df[,1])
smallTown.df<-cbind(smallTown.df,distance)
#subset to towns within 60 driving miles of downtown Chicago
smallTown.df<-smallTown.df%>%
filter(distance<=60)
city<-str_sub(smallTown.df[,1], 0, -5)
overallScore<-smallTown.df[,2]
overallRank<-rank(-smallTown.df[,2])
affordRank<-rank(smallTown.df[,3])
econRank<-rank(smallTown.df[,4])
eduAndHealthRank<-rank(smallTown.df[,5])
qualLifeRank<-rank(smallTown.df[,6])
distance<-smallTown.df[,"distance"]
smallTown.df<-cbind.data.frame(city,overallRank,overallScore,
distance,affordRank,
econRank,eduAndHealthRank,
qualLifeRank)
# klusterGroup<-kmeans(smallTown.df[,3:4],4)
# set.seed(100)
# klusterGroup<-kmeans(apply(smallTown.df[,3:4], 2, scale),3)
# klusterGroup<-klusterGroup$cluster
#Kmeans clustering didnt work out so well, so I opted for simpler approach
newCluster<-paste(
ifelse(smallTown.df[,3]>=mean(smallTown.df[,3]),"Above Avg. Score,","Below Avg. Score,"),
ifelse(smallTown.df[,4]>=mean(smallTown.df[,4]),"Far","Near"))
smallTown.df<-cbind.data.frame(smallTown.df, newCluster)
rm(list=setdiff(ls(), "smallTown.df"))
save(smallTown.df,file="DATA/smallTown_finalData")
remove(list=ls())
setwd("~/Documents/GTD/Best Small Towns/smallTownRank_Final")
#read in data
load(file="DATA/smallTown_finalData")
library(rCharts)
library(googleVis)
scatterPlot <- nPlot(distance ~ overallScore, group = 'newCluster', data = smallTown.df, type = 'scatterChart')
scatterPlot$chart(tooltipContent = "#! function(key, x, y, e){
return '<b>Suburb</b>: ' + e.point.city
} !#")
scatterPlot$chart(sizeRange = c(30,30))
scatterPlot$yAxis(axisLabel = "Miles from Downtown Chicago")
scatterPlot$xAxis(axisLabel = "Overall Score")
scatterPlot$chart(yDomain=c(8,60))
scatterPlot$chart(xDomain=c(37,57))
scatterPlot$chart(color = c("blue", "green", "orange", "red"))
scatterPlot
save(scatterPlot,file="PLOTS/scatterPlot")
smallTownB.df<-smallTown.df[,1:8]
names(smallTownB.df)
colnames(smallTownB.df)<-c("Suburb", "Overall Rank", "Overall Score",
"Distance from Chicago (Miles)","Affordability Rank",
"Economic Rank","Ed. and Health Rank", "Quality of Life Rank")
townTable <- gvisTable(smallTownB.df,
options=list(page='enable'))
# plot(townTable)
save(townTable,file="PLOTS/tablePlot")
---
output: html_document
---
# Best Suburbs Near Chicago
Suburbs or city? It’s a first-date type of question.  Yes, it’s that important.  Luckily, both my wife and I have always been amicable to the “burbs”, and while we haven't made the move just yet, it’s certainly on the the horizon.  That’s why I was happy see WalletHub’s [comprehensive study](http://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/) ranking the best and worst small towns in America.  WalletHub looks at 22 metrics to rank towns on affordability, economic health, education & health and quality of life and gives each town an overall score (check out WalletHub’s full [methodology](https://wallethub.com/edu/best-worst-small-cities-to-live-in/16581/#methodology) ).
Data on 1,200 towns is cool, but I care mostly about suburbs in Chicago-land area.  I scrape the data from the study’s results, and subset to suburbs within 60 driving miles of downtown Chicago. Only towns with populations between 25,000 and 100,000 residents were included in WalletHub’s study.  Unfortunately, that excludes larger suburbs like Naperville, and smaller suburbs like Western Springs from the analysis.
<br>
<center> <h4>Suburbs Near Chicago (Interactive Table)</h4> </center>
```{r setOptions, message=FALSE,echo=F}
library(googleVis)
op <- options(gvis.plot.tag='chart')
```
```{r ComboExample, results='asis', tidy=FALSE, echo=FALSE}
load("PLOTS/tablePlot")
plot(townTable)
```
<br>
## The Trade Off
I also wanted to compare a suburb’s overall score with its distance from downtown Chicago.  In general, I’d have a bias towards being closer to Chicago.  Even if you live in the burbs, you’ll likely commute into the City for work and social obligations will have you visiting the City on a regular basis.
<br>
<center> <h4>Overall Scores Vs. Distance from Downtown Chicago (Interactive Scatterplot)</h4> </center>
```{r set-options, echo=FALSE, cache=FALSE}
options(RCHART_WIDTH = 1000, RCHART_HEIGHT = 400)
```
```{r, echo=FALSE, cache=F, results='asis', comment=NA}
load("PLOTS/scatterPlot")
scatterPlot$print('chart1', include_assets=T)
```
For the code, please visit my github.
smallTown.df%>%
filter(newCluster=="Above Avg. Score, Near")
smallTown.df%>%
filter(newCluster=="Above Avg. Score, Near")%>%
select(city)
smallTown.df%>%
filter(newCluster=="Above Avg. Score, Near")%>%
select(city,overallScore,distance)
